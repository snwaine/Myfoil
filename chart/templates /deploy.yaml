{{- $outer := . }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/name: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/name: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Release.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: Always
          command:
{{ toYaml .Values.command | indent 12 }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /
              port: {{ .Values.service.ports.port }}
            initialDelaySeconds: 10
            periodSeconds: 5
          volumeMounts:
  {{ if .Values.persistence.enabled }}
  {{- range $k, $v := .Values.persistence.volumes }}
          - mountPath: {{ $v.mountPath | quote }}
            name: {{ $k }}
    {{- end }}
  {{- end }}
      volumes:
  {{ if .Values.persistence.enabled }}
  {{- range $k, $v := .Values.persistence.volumes }}
  {{- with $outer }}
      - name: {{ $k }}
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-{{ $k }}
  {{- end }}
  {{- end }}
{{- end }}
